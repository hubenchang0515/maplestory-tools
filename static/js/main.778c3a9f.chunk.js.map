{"version":3,"sources":["component/SpinBox.tsx","tool/MysteryBadgeCalculator.tsx","component/ComboBox.tsx","component/CheckBox.tsx","component/Progress.tsx","tool/CharmChipSimulator.tsx","MainPage.tsx","reportWebVitals.ts","index.tsx"],"names":["SpinBox","props","m_props","className","color","label","useState","value","min","max","setValue","onChange","useEffect","undefined","type","event","Number","target","MysteryBadgeCalculator","level","setLevel","growth","setGrowth","need","setNeed","perDay","setPerDay","maxGrowth","setMaxGrowth","Math","pow","n","i","ceil","dropdownStyle","borderTopLeftRadius","borderBottomLeftRadius","ComboBox","placeholder","text","setText","isShow","setShow","current","selections","length","createSelectHandler","document","addEventListener","e","CSSTransition","in","timeout","classNames","enterActive","enterDone","onClick","nativeEvent","stopImmediatePropagation","style","exitActive","map","item","index","data-value","CheckBox","checked","setChecked","Progress","percent","progressBarStyle","transitionDuration","width","String","textAlign","data-percent","CharmChipSimulator","articleStyle","marginLeft","marginRight","toolsList","title","url","component","basicRate","setBasicRate","hotTime","setHotTime","handSkill","setHandSkill","luckDay","setLuckDay","buttonState","setButtonState","finalRate","setFinalRate","resultList","setResultList","rate","isNaN","round","result","message","random","MainPage","to","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.778c3a9f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\ninterface SpinBoxProps {\n    className?: string,\n    color?: string,\n    label?: string,\n    value?: number,\n    min?: number,\n    max?: number,\n    onChange?: (value: number) => void,\n}\n\nfunction SpinBox(props:SpinBoxProps): JSX.Element {\n    const m_props: SpinBoxProps = {\n        className: \"\",\n        color: \"blue\",\n        label: \"SpinBox\",\n        ...props\n    }\n    const [value, setValue] = useState(m_props.value ?? m_props.min ?? m_props.max ?? 0)\n    const handleValueChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(Number(event.target.value))\n    }\n\n    const onChange = m_props.onChange\n    useEffect(() => {\n        if(onChange !== undefined) {\n            onChange(value)\n        }\n    }, [value, onChange])\n\n    return(\n        <div className={\"ui labeled input \" + m_props.className}>\n            <div className={\"ui label \" + m_props.color}>{m_props.label}</div>\n            <input \n                type=\"number\"\n                value={value}\n                min={m_props.min}\n                max={m_props.max}\n                onChange={handleValueChanged}\n            />\n        </div>\n    )\n}\n\nexport default SpinBox","// 神秘徽章计算器\n\nimport React, { useEffect, useState } from 'react'\nimport SpinBox from '../component/SpinBox'\n\nconst globalMaxLevel:number = 20\n\nfunction MysteryBadgeCalculator(): JSX.Element {\n    const [level, setLevel] = useState(1)\n    const [growth, setGrowth] = useState(0)\n    const [need, setNeed] = useState(0)\n    const [perDay, setPerDay] = useState(0)\n    const [maxGrowth, setMaxGrowth] = useState(0)\n\n    useEffect(() => {\n        setMaxGrowth((level > 0 && level < globalMaxLevel ? Math.pow(level, 2) + 11 : 0))\n    }, [level])\n\n    useEffect(() => {\n        let n = 0\n        for(let i = level; i < globalMaxLevel; i++){\n            n += Math.pow(i, 2) + 11\n        }\n        setNeed(n - growth)\n    }, [level, growth])\n\n    const handleLevelChanged = (value: number) => {\n        if(value < 1) {\n            setLevel(1)\n        } else if(value > globalMaxLevel) {\n            setLevel(globalMaxLevel)\n        } else {\n            setLevel(value)\n        }\n    }\n\n    const handleGrowthChanged = (value: number) => {\n        setGrowth(value <= maxGrowth ? value : maxGrowth)\n    }\n\n    const handleGetPerDayChanged = (value: number) => {\n        setPerDay(value)\n    }\n\n    return(\n        <div>\n            <h3 className=\"ui center aligned header\">神秘徽章计算器</h3>\n            <div className=\"ui container\">\n                <SpinBox\n                    label=\"当前等级\"\n                    className=\"fluid\"\n                    onChange={handleLevelChanged}\n                    min={1}\n                    max={20}\n                />\n                <br/>\n                <SpinBox\n                    label=\"成长值\"\n                    className=\"fluid\"\n                    onChange={handleGrowthChanged}\n                    min={0}\n                    max={maxGrowth}\n                />\n                <br/>\n                <SpinBox\n                    label=\"每日获取量\"\n                    className=\"fluid\"\n                    onChange={handleGetPerDayChanged}\n                    min={0}\n                />\n                <br/>\n                <div className=\"ui segment\">\n                    {\n                        need === 0 ? <>恭喜你，神秘徽章已经满级啦！</>:\n                        perDay <= 0 ? <>你的神秘徽章距离满级还差 <span className=\"ui pink label\">{need}</span> 点成长值。</>:\n                        <>你的神秘徽章距离满级还差 <span className=\"ui pink label\">{need}</span>点成长值，达到满级还需要 <span className=\"ui pink label\">{Math.ceil(need/perDay)}</span> 天。</>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MysteryBadgeCalculator","import React, { useEffect, useState } from 'react'\nimport { CSSTransition } from 'react-transition-group'\n\nexport interface ComboBoxSelection {\n    text: string,\n    value: any,\n}\n\ninterface ComboBoxProps {\n    className?: string,\n    color?: string,\n    label?: string,\n    placeholder?: string,\n    selections?: ComboBoxSelection[],\n    current?: number\n    onChange?: (v: any) => void,\n}\n\nconst dropdownStyle = {\n    borderTopLeftRadius: \"0\",\n    borderBottomLeftRadius: \"0\",\n}\n\nfunction ComboBox(props:ComboBoxProps): JSX.Element {\n    const m_props: ComboBoxProps = {\n        className: \"\",\n        color: \"blue\",\n        label: \"ComboBox\",\n        placeholder: \"\",\n        ...props\n    }\n    const [value, setValue] = useState<any>(undefined)\n    const [text, setText] = useState(m_props.placeholder)\n    const [isShow, setShow] = useState(false)\n\n    const current = m_props.current\n    const selections = m_props.selections\n    useEffect(() => {\n        if(current !== undefined \n            && selections !== undefined \n            && current < selections.length) {\n            setValue(selections[current].value)\n        }\n    }, [current, selections])\n\n    const handleClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        setShow(!isShow)\n\n        // 阻止事件冒泡，避免触发全局点击事件，导致下拉框收缩\n        event.nativeEvent.stopImmediatePropagation() \n    }\n\n    const createSelectHandler = (text:string, value:any) => {\n        return (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n            setShow(false)\n            setValue(value)\n            setText(text)\n        }\n    }\n\n    // 全局点击事件，收缩下拉框\n    useEffect(() => {\n        document.addEventListener('click', (e:MouseEvent) => {\n            setShow(false)\n        });   \n    }, [])\n\n    const onChange = m_props.onChange\n    useEffect(() => {\n        if(onChange !== undefined) {\n            onChange(value)\n        }\n    }, [value, onChange])\n\n    return(\n        <div className={\"ui labeled input \" + m_props.className}>\n            <div className={\"ui label \" + m_props.color}>{m_props.label}</div>\n            <CSSTransition\n                in={isShow}\n                timeout={200}\n                classNames={{\n                    enterActive:\"active\",\n                    enterDone:\"active visible\"\n                }}\n            >\n                <div className={\"ui selection dropdown \" + m_props.className} onClick={handleClick} style={dropdownStyle}>\n                    <input type=\"hidden\"/>\n                    <i className=\"dropdown icon\"></i>\n                    <div className=\"default text\">{text}</div>\n                    <CSSTransition\n                        in={isShow}\n                        timeout={200}\n                        classNames={{\n                            enterActive:\"active visible animating slide down in\",\n                            enterDone:\"active visible\",\n                            exitActive:\"active visible animating slide down out\"\n                        }}\n                    >\n                        <div className=\"menu transition\">\n                        {\n                            m_props.selections?.map((item, index) => {\n                                return(\n                                    <div key={index} \n                                        className=\"item\" \n                                        data-value={item.value} \n                                        onClick={createSelectHandler(item.text, item.value)}\n                                    >\n                                        {item.text}\n                                    </div>\n                                )\n                            })\n                        }\n                        </div>\n                    </CSSTransition>\n                </div>\n            </CSSTransition>\n        </div>\n    )\n}\n\nexport default ComboBox","import { useEffect, useState } from \"react\"\n\ninterface CheckBoxProps {\n    text?: string\n    className?: string\n    checked?: boolean\n    onChange?: (checked:boolean) => void\n}\n\nfunction CheckBox(props: CheckBoxProps) {\n    const m_props = {\n        text: \"CheckBox\",\n        className: \"\",\n        checked: false,\n        ...props\n    }\n\n    const [checked, setChecked] = useState(m_props.checked)\n\n    useEffect(() => {\n        setChecked(m_props.checked)\n    }, [m_props.checked])\n\n    const handleClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        setChecked(!checked)\n    }\n\n    const onChange = m_props.onChange\n    useEffect(() => {\n        if(onChange !== undefined) {\n            onChange(checked)\n        }\n    }, [checked, onChange])\n\n    return (\n        <div className={props.className}>\n            <div className=\"ui checkbox \" onClick={handleClick}>\n                <input type=\"checkbox\" checked={checked}/>\n                <label>{m_props.text}</label>\n            </div>\n        </div>\n    )\n}\n\nexport default CheckBox","\ninterface ProgressProps {\n    className?: string,\n    color?: string,\n    text?: string,\n    percent?: number, // int 0 ~ 100\n}\n\ninterface ProgressBarStyle {\n    transitionDuration: string,\n    width: string,\n}\n\nfunction Progress(props: ProgressProps) {\n    const m_props: ProgressProps = {\n        color: \"green\",\n        percent: 0,\n        ...props\n    }\n\n    const progressBarStyle: ProgressBarStyle = {\n        transitionDuration: \"300ms\",\n        width: String(m_props.percent) + \"%\"\n    }\n\n    return (\n        <div className={m_props.className}>\n            <div className=\"ui eight column grid\">\n                <div className=\"column\">{m_props.text}</div>\n                <div className=\"right floated column\" style={{textAlign:\"right\"}}>{m_props.percent}%</div>\n            </div>\n            <div className={\"ui tiny progress \" + m_props.color} data-percent={m_props.percent}>\n                <div className=\"bar\" style={progressBarStyle}></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Progress;","// 咒语痕迹模拟器\n\nimport React, { useEffect, useState } from 'react'\nimport ComboBox,{ComboBoxSelection} from '../component/ComboBox'\nimport CheckBox from '../component/CheckBox'\nimport Progress from '../component/Progress'\n\nconst selections: ComboBoxSelection[] = [\n    {text: \"100%\", value: 1.00},\n    {text: \"70%\", value: 0.70},\n    {text: \"30%\", value: 0.30},\n    {text: \"15%\", value: 0.15},\n]\n\ninterface Result {\n    message: string,\n    color: string\n}\n\nfunction CharmChipSimulator(): JSX.Element {\n    const [basicRate, setBasicRate] = useState(0)\n    const [hotTime, setHotTime] = useState(false)\n    const [handSkill, setHandSkill] = useState(false)\n    const [luckDay, setLuckDay] = useState(false)\n    const [buttonState, setButtonState] = useState(\"disabled\")\n\n    const [finalRate, setFinalRate] = useState(0)\n\n    const [resultList, setResultList] = useState<Result[]>([])\n\n    useEffect(() => {\n        if(basicRate !== undefined && basicRate !== 0) {\n            setButtonState(\"\")\n        } else {\n            setButtonState(\"disabled\")\n        }\n    }, [basicRate])\n\n    useEffect(() => {\n        let rate = basicRate\n        if(hotTime) {\n            rate += rate === 0.70 ? 0.25 : 0.15\n        }\n        if(handSkill) {\n            rate *= 1.1\n        }\n        if(luckDay) {\n            rate *= 1.1\n        }\n        if(isNaN(rate)) {\n            rate = 0\n        }\n        if(rate > 1.0) {\n            rate = 1.0\n        }\n        setFinalRate(rate)\n    }, [basicRate, hotTime, handSkill, luckDay])\n\n    const handleClickEnhanceButton = () => {\n        let result:Result = {\n            message: \"\",\n            color: \"\"\n        }\n\n        if(Math.random() <= finalRate) {\n            result.message = \"[强化] 咒语痕迹发出了一道光，装备被附上了神奇的力量。\"\n            result.color = \"green\"\n        } else {\n            result.message = \"[强化] 咒语痕迹发出了一道光，但是装备没有发生任何变化。\"\n            result.color = \"red\"\n        }\n        setResultList([\n            result,\n            ...resultList\n        ])\n    }\n\n    const handleClickSkipButton = () => {\n        let result:Result = {\n            message: \"\",\n            color: \"\"\n        }\n        if(Math.random() <= finalRate) {\n            result.message = \"[垫卷] 咒语痕迹发出了一道光，装备被附上了神奇的力量。\"\n            result.color = \"olive\"\n        } else {\n            result.message = \"[垫卷] 咒语痕迹发出了一道光，但是装备没有发生任何变化。\"\n            result.color = \"yellow\"\n        }\n        setResultList([\n            result,\n            ...resultList\n        ])\n    } \n\n    const handleClickClearButton = () => {\n        setResultList([])\n    }\n\n    return (\n        <div>\n            <h3 className=\"ui center aligned header\">咒语痕迹模拟器</h3>\n            <div className=\"ui container\">\n                <ComboBox\n                    className=\"fluid\"\n                    label=\"咒语成功率\"\n                    color=\"blue\"\n                    placeholder=\"请选择咒语痕迹的成功率\"\n                    selections={selections}\n                    onChange={setBasicRate}\n                />\n                <br/>\n                <div className=\"ui three column grid\">\n                    <CheckBox className=\"column\" text=\"热力时间\" checked={hotTime} onChange={setHotTime}/>\n                    <CheckBox className=\"column\" text=\"手计加成10%\" checked={handSkill} onChange={setHandSkill}/>\n                    <CheckBox className=\"column\" text=\"幸运日加成10%\" checked={luckDay} onChange={setLuckDay}/>\n                </div>\n                <br/>\n                <Progress\n                    text=\"综合成功率\"\n                    color=\"green\"\n                    percent={Math.round(finalRate * 100)}\n                />\n                <br/>\n                <div className=\"ui eight column grid\">\n                    <div className=\"column\">\n                        <button className={\"ui primary button \" + buttonState} onClick={handleClickEnhanceButton}>强化</button>\n                    </div>\n                    <div className=\"column\">\n                        <button className={\"ui column secondary button \" + buttonState} onClick={handleClickSkipButton}>垫卷</button>\n                    </div>\n                    <div className=\"right floated column\">\n                        <button className={\"ui column secondary button \"} onClick={handleClickClearButton}>清空</button>\n                    </div>\n                </div>\n                <br/>\n                {\n                    resultList.map((item, index) => {\n                        return (\n                            <div key={index} className={\"ui fluid message \" + item.color}>{item.message}</div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default CharmChipSimulator","import {Route, Link} from 'react-router-dom'\nimport MysteryBadgeCalculator from './tool/MysteryBadgeCalculator'\nimport CharmChipSimulator from './tool/CharmChipSimulator'\n\nconst articleStyle = {\n    marginLeft: \"300px\",\n    marginRight: \"100px\",\n}\n\ninterface ToolNode {\n    title: string,\n    url: string,\n    component: () => JSX.Element\n}\n\n// 映射表\nconst toolsList: ToolNode[] = [\n    {\n        title: \"神秘徽章计算器\",\n        url: \"/mystery-badge-calculator\", \n        component: MysteryBadgeCalculator\n    },\n    {\n        title: \"咒语痕迹模拟器\",\n        url: \"/charm-chip-simulator\", \n        component: CharmChipSimulator\n    },\n]\n\nfunction MainPage() {\n    return(\n        <div>\n            <div className=\"ui sidebar inverted vertical menu visible\">\n            {\n                toolsList.map((item, index) => {\n                    return (\n                        <Link key={index} className=\"item\" to={item.url}>\n                            {item.title}\n                        </Link>\n                    )\n                })\n            }\n            </div>\n            <div className=\"ui masthead vertical segment\" style={articleStyle}>\n                \n                {\n                    toolsList.map((item, index) => {\n                        return (\n                            <Route key={index} path={item.url} exact component={item.component}/>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default MainPage","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport MainPage from './MainPage';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  <HashRouter>\n    <MainPage />\n  </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}